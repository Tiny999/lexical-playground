import {
  addClassNamesToElement
} from "./chunk-VPCBVKHR.js";
import {
  $applyNodeReplacement,
  TextNode
} from "./chunk-CVCL6TEU.js";

// node_modules/@lexical/hashtag/LexicalHashtag.dev.mjs
var HashtagNode = class _HashtagNode extends TextNode {
  static getType() {
    return "hashtag";
  }
  static clone(node) {
    return new _HashtagNode(node.__text, node.__key);
  }
  constructor(text, key) {
    super(text, key);
  }
  createDOM(config) {
    const element = super.createDOM(config);
    addClassNamesToElement(element, config.theme.hashtag);
    return element;
  }
  static importJSON(serializedNode) {
    const node = $createHashtagNode(serializedNode.text);
    node.setFormat(serializedNode.format);
    node.setDetail(serializedNode.detail);
    node.setMode(serializedNode.mode);
    node.setStyle(serializedNode.style);
    return node;
  }
  exportJSON() {
    return {
      ...super.exportJSON(),
      type: "hashtag"
    };
  }
  canInsertTextBefore() {
    return false;
  }
  isTextEntity() {
    return true;
  }
};
function $createHashtagNode(text = "") {
  return $applyNodeReplacement(new HashtagNode(text));
}
function $isHashtagNode(node) {
  return node instanceof HashtagNode;
}

export {
  HashtagNode,
  $createHashtagNode,
  $isHashtagNode
};
//# sourceMappingURL=chunk-N6SWL6DT.js.map
