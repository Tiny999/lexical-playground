{
  "version": 3,
  "sources": ["../../@lexical/dragon/LexicalDragon.dev.mjs"],
  "sourcesContent": ["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { $getSelection, $isRangeSelection, $isTextNode } from 'lexical';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction registerDragonSupport(editor) {\n  const origin = window.location.origin;\n  const handler = event => {\n    if (event.origin !== origin) {\n      return;\n    }\n    const rootElement = editor.getRootElement();\n    if (document.activeElement !== rootElement) {\n      return;\n    }\n    const data = event.data;\n    if (typeof data === 'string') {\n      let parsedData;\n      try {\n        parsedData = JSON.parse(data);\n      } catch (e) {\n        return;\n      }\n      if (parsedData && parsedData.protocol === 'nuanria_messaging' && parsedData.type === 'request') {\n        const payload = parsedData.payload;\n        if (payload && payload.functionId === 'makeChanges') {\n          const args = payload.args;\n          if (args) {\n            const [elementStart, elementLength, text, selStart, selLength, formatCommand] = args;\n            editor.update(() => {\n              const selection = $getSelection();\n              if ($isRangeSelection(selection)) {\n                const anchor = selection.anchor;\n                let anchorNode = anchor.getNode();\n                let setSelStart = 0;\n                let setSelEnd = 0;\n                if ($isTextNode(anchorNode)) {\n                  // set initial selection\n                  if (elementStart >= 0 && elementLength >= 0) {\n                    setSelStart = elementStart;\n                    setSelEnd = elementStart + elementLength;\n                    // If the offset is more than the end, make it the end\n                    selection.setTextNodeRange(anchorNode, setSelStart, anchorNode, setSelEnd);\n                  }\n                }\n                if (setSelStart !== setSelEnd || text !== '') {\n                  selection.insertRawText(text);\n                  anchorNode = anchor.getNode();\n                }\n                if ($isTextNode(anchorNode)) {\n                  // set final selection\n                  setSelStart = selStart;\n                  setSelEnd = selStart + selLength;\n                  const anchorNodeTextLength = anchorNode.getTextContentSize();\n                  // If the offset is more than the end, make it the end\n                  setSelStart = setSelStart > anchorNodeTextLength ? anchorNodeTextLength : setSelStart;\n                  setSelEnd = setSelEnd > anchorNodeTextLength ? anchorNodeTextLength : setSelEnd;\n                  selection.setTextNodeRange(anchorNode, setSelStart, anchorNode, setSelEnd);\n                }\n\n                // block the chrome extension from handling this event\n                event.stopImmediatePropagation();\n              }\n            });\n          }\n        }\n      }\n    }\n  };\n  window.addEventListener('message', handler, true);\n  return () => {\n    window.removeEventListener('message', handler, true);\n  };\n}\n\nexport { registerDragonSupport };\n"],
  "mappings": ";;;;;;;AAkBA,SAAS,sBAAsB,QAAQ;AACrC,QAAM,SAAS,OAAO,SAAS;AAC/B,QAAM,UAAU,WAAS;AACvB,QAAI,MAAM,WAAW,QAAQ;AAC3B;AAAA,IACF;AACA,UAAM,cAAc,OAAO,eAAe;AAC1C,QAAI,SAAS,kBAAkB,aAAa;AAC1C;AAAA,IACF;AACA,UAAM,OAAO,MAAM;AACnB,QAAI,OAAO,SAAS,UAAU;AAC5B,UAAI;AACJ,UAAI;AACF,qBAAa,KAAK,MAAM,IAAI;AAAA,MAC9B,SAAS,GAAG;AACV;AAAA,MACF;AACA,UAAI,cAAc,WAAW,aAAa,uBAAuB,WAAW,SAAS,WAAW;AAC9F,cAAM,UAAU,WAAW;AAC3B,YAAI,WAAW,QAAQ,eAAe,eAAe;AACnD,gBAAM,OAAO,QAAQ;AACrB,cAAI,MAAM;AACR,kBAAM,CAAC,cAAc,eAAe,MAAM,UAAU,WAAW,aAAa,IAAI;AAChF,mBAAO,OAAO,MAAM;AAClB,oBAAM,YAAY,cAAc;AAChC,kBAAI,kBAAkB,SAAS,GAAG;AAChC,sBAAM,SAAS,UAAU;AACzB,oBAAI,aAAa,OAAO,QAAQ;AAChC,oBAAI,cAAc;AAClB,oBAAI,YAAY;AAChB,oBAAI,YAAY,UAAU,GAAG;AAE3B,sBAAI,gBAAgB,KAAK,iBAAiB,GAAG;AAC3C,kCAAc;AACd,gCAAY,eAAe;AAE3B,8BAAU,iBAAiB,YAAY,aAAa,YAAY,SAAS;AAAA,kBAC3E;AAAA,gBACF;AACA,oBAAI,gBAAgB,aAAa,SAAS,IAAI;AAC5C,4BAAU,cAAc,IAAI;AAC5B,+BAAa,OAAO,QAAQ;AAAA,gBAC9B;AACA,oBAAI,YAAY,UAAU,GAAG;AAE3B,gCAAc;AACd,8BAAY,WAAW;AACvB,wBAAM,uBAAuB,WAAW,mBAAmB;AAE3D,gCAAc,cAAc,uBAAuB,uBAAuB;AAC1E,8BAAY,YAAY,uBAAuB,uBAAuB;AACtE,4BAAU,iBAAiB,YAAY,aAAa,YAAY,SAAS;AAAA,gBAC3E;AAGA,sBAAM,yBAAyB;AAAA,cACjC;AAAA,YACF,CAAC;AAAA,UACH;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACA,SAAO,iBAAiB,WAAW,SAAS,IAAI;AAChD,SAAO,MAAM;AACX,WAAO,oBAAoB,WAAW,SAAS,IAAI;AAAA,EACrD;AACF;",
  "names": []
}
