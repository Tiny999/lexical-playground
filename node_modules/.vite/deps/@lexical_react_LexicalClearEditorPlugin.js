import {
  useLexicalComposerContext
} from "./chunk-5BMJGEYX.js";
import {
  require_react
} from "./chunk-CANBAPAS.js";
import {
  $createParagraphNode,
  $getRoot,
  $getSelection,
  $isRangeSelection,
  CLEAR_EDITOR_COMMAND,
  COMMAND_PRIORITY_EDITOR
} from "./chunk-CVCL6TEU.js";
import {
  __toESM
} from "./chunk-5WRI5ZAA.js";

// node_modules/@lexical/react/LexicalClearEditorPlugin.dev.mjs
var import_react = __toESM(require_react(), 1);
var CAN_USE_DOM = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined";
var useLayoutEffectImpl = CAN_USE_DOM ? import_react.useLayoutEffect : import_react.useEffect;
function ClearEditorPlugin({
  onClear
}) {
  const [editor] = useLexicalComposerContext();
  useLayoutEffectImpl(() => {
    return editor.registerCommand(CLEAR_EDITOR_COMMAND, (payload) => {
      editor.update(() => {
        if (onClear == null) {
          const root = $getRoot();
          const selection = $getSelection();
          const paragraph = $createParagraphNode();
          root.clear();
          root.append(paragraph);
          if (selection !== null) {
            paragraph.select();
          }
          if ($isRangeSelection(selection)) {
            selection.format = 0;
          }
        } else {
          onClear();
        }
      });
      return true;
    }, COMMAND_PRIORITY_EDITOR);
  }, [editor, onClear]);
  return null;
}
export {
  ClearEditorPlugin
};
//# sourceMappingURL=@lexical_react_LexicalClearEditorPlugin.js.map
