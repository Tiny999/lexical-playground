{
  "version": 3,
  "sources": ["../../@lexical/react/LexicalHorizontalRuleNode.dev.mjs"],
  "sourcesContent": ["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { useLexicalNodeSelection } from '@lexical/react/useLexicalNodeSelection';\nimport { addClassNamesToElement, mergeRegister, removeClassNamesFromElement } from '@lexical/utils';\nimport { createCommand, DecoratorNode, $applyNodeReplacement, $getSelection, $isNodeSelection, CLICK_COMMAND, COMMAND_PRIORITY_LOW, KEY_DELETE_COMMAND, KEY_BACKSPACE_COMMAND } from 'lexical';\nimport { useCallback, useEffect } from 'react';\nimport { jsx } from 'react/jsx-runtime';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst INSERT_HORIZONTAL_RULE_COMMAND = createCommand('INSERT_HORIZONTAL_RULE_COMMAND');\nfunction HorizontalRuleComponent({\n  nodeKey\n}) {\n  const [editor] = useLexicalComposerContext();\n  const [isSelected, setSelected, clearSelection] = useLexicalNodeSelection(nodeKey);\n  const $onDelete = useCallback(event => {\n    const deleteSelection = $getSelection();\n    if (isSelected && $isNodeSelection(deleteSelection)) {\n      event.preventDefault();\n      editor.update(() => {\n        deleteSelection.getNodes().forEach(node => {\n          if ($isHorizontalRuleNode(node)) {\n            node.remove();\n          }\n        });\n      });\n    }\n    return false;\n  }, [editor, isSelected]);\n  useEffect(() => {\n    return mergeRegister(editor.registerCommand(CLICK_COMMAND, event => {\n      const hrElem = editor.getElementByKey(nodeKey);\n      if (event.target === hrElem) {\n        if (!event.shiftKey) {\n          clearSelection();\n        }\n        setSelected(!isSelected);\n        return true;\n      }\n      return false;\n    }, COMMAND_PRIORITY_LOW), editor.registerCommand(KEY_DELETE_COMMAND, $onDelete, COMMAND_PRIORITY_LOW), editor.registerCommand(KEY_BACKSPACE_COMMAND, $onDelete, COMMAND_PRIORITY_LOW));\n  }, [clearSelection, editor, isSelected, nodeKey, $onDelete, setSelected]);\n  useEffect(() => {\n    const hrElem = editor.getElementByKey(nodeKey);\n    const isSelectedClassName = 'selected';\n    if (hrElem !== null) {\n      if (isSelected) {\n        addClassNamesToElement(hrElem, isSelectedClassName);\n      } else {\n        removeClassNamesFromElement(hrElem, isSelectedClassName);\n      }\n    }\n  }, [editor, isSelected, nodeKey]);\n  return null;\n}\nclass HorizontalRuleNode extends DecoratorNode {\n  static getType() {\n    return 'horizontalrule';\n  }\n  static clone(node) {\n    return new HorizontalRuleNode(node.__key);\n  }\n  static importJSON(serializedNode) {\n    return $createHorizontalRuleNode();\n  }\n  static importDOM() {\n    return {\n      hr: () => ({\n        conversion: $convertHorizontalRuleElement,\n        priority: 0\n      })\n    };\n  }\n  exportJSON() {\n    return {\n      type: 'horizontalrule',\n      version: 1\n    };\n  }\n  exportDOM() {\n    return {\n      element: document.createElement('hr')\n    };\n  }\n  createDOM(config) {\n    const element = document.createElement('hr');\n    addClassNamesToElement(element, config.theme.hr);\n    return element;\n  }\n  getTextContent() {\n    return '\\n';\n  }\n  isInline() {\n    return false;\n  }\n  updateDOM() {\n    return false;\n  }\n  decorate() {\n    return /*#__PURE__*/jsx(HorizontalRuleComponent, {\n      nodeKey: this.__key\n    });\n  }\n}\nfunction $convertHorizontalRuleElement() {\n  return {\n    node: $createHorizontalRuleNode()\n  };\n}\nfunction $createHorizontalRuleNode() {\n  return $applyNodeReplacement(new HorizontalRuleNode());\n}\nfunction $isHorizontalRuleNode(node) {\n  return node instanceof HorizontalRuleNode;\n}\n\nexport { $createHorizontalRuleNode, $isHorizontalRuleNode, HorizontalRuleNode, INSERT_HORIZONTAL_RULE_COMMAND };\n"],
  "mappings": "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",
  "names": []
}
