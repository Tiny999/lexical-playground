import {
  $createHorizontalRuleNode,
  INSERT_HORIZONTAL_RULE_COMMAND
} from "./chunk-VDTGY7XV.js";
import "./chunk-UJYKK5ES.js";
import {
  useLexicalComposerContext
} from "./chunk-5BMJGEYX.js";
import "./chunk-WLVB5OIP.js";
import {
  require_react
} from "./chunk-CANBAPAS.js";
import {
  $insertNodeToNearestRoot
} from "./chunk-VPCBVKHR.js";
import "./chunk-VD5PEWHI.js";
import {
  $getSelection,
  $isRangeSelection,
  COMMAND_PRIORITY_EDITOR
} from "./chunk-CVCL6TEU.js";
import {
  __toESM
} from "./chunk-5WRI5ZAA.js";

// node_modules/@lexical/react/LexicalHorizontalRulePlugin.dev.mjs
var import_react = __toESM(require_react(), 1);
function HorizontalRulePlugin() {
  const [editor] = useLexicalComposerContext();
  (0, import_react.useEffect)(() => {
    return editor.registerCommand(INSERT_HORIZONTAL_RULE_COMMAND, (type) => {
      const selection = $getSelection();
      if (!$isRangeSelection(selection)) {
        return false;
      }
      const focusNode = selection.focus.getNode();
      if (focusNode !== null) {
        const horizontalRuleNode = $createHorizontalRuleNode();
        $insertNodeToNearestRoot(horizontalRuleNode);
      }
      return true;
    }, COMMAND_PRIORITY_EDITOR);
  }, [editor]);
  return null;
}
export {
  HorizontalRulePlugin
};
//# sourceMappingURL=@lexical_react_LexicalHorizontalRulePlugin.js.map
