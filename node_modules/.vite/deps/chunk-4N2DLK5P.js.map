{
  "version": 3,
  "sources": ["../../@lexical/overflow/LexicalOverflow.dev.mjs"],
  "sourcesContent": ["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { ElementNode, $applyNodeReplacement } from 'lexical';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/** @noInheritDoc */\nclass OverflowNode extends ElementNode {\n  static getType() {\n    return 'overflow';\n  }\n  static clone(node) {\n    return new OverflowNode(node.__key);\n  }\n  static importJSON(serializedNode) {\n    return $createOverflowNode();\n  }\n  static importDOM() {\n    return null;\n  }\n  constructor(key) {\n    super(key);\n    this.__type = 'overflow';\n  }\n  exportJSON() {\n    return {\n      ...super.exportJSON(),\n      type: 'overflow'\n    };\n  }\n  createDOM(config) {\n    const div = document.createElement('span');\n    const className = config.theme.characterLimit;\n    if (typeof className === 'string') {\n      div.className = className;\n    }\n    return div;\n  }\n  updateDOM(prevNode, dom) {\n    return false;\n  }\n  insertNewAfter(selection, restoreSelection = true) {\n    const parent = this.getParentOrThrow();\n    return parent.insertNewAfter(selection, restoreSelection);\n  }\n  excludeFromCopy() {\n    return true;\n  }\n  static transform() {\n    return node => {\n      if (!$isOverflowNode(node)) {\n        throw Error(`node is not a OverflowNode`);\n      }\n      if (node.isEmpty()) {\n        node.remove();\n      }\n    };\n  }\n}\nfunction $createOverflowNode() {\n  return $applyNodeReplacement(new OverflowNode());\n}\nfunction $isOverflowNode(node) {\n  return node instanceof OverflowNode;\n}\n\nexport { $createOverflowNode, $isOverflowNode, OverflowNode };\n"],
  "mappings": ";;;;;;AAmBA,IAAM,eAAN,MAAM,sBAAqB,YAAY;AAAA,EACrC,OAAO,UAAU;AACf,WAAO;AAAA,EACT;AAAA,EACA,OAAO,MAAM,MAAM;AACjB,WAAO,IAAI,cAAa,KAAK,KAAK;AAAA,EACpC;AAAA,EACA,OAAO,WAAW,gBAAgB;AAChC,WAAO,oBAAoB;AAAA,EAC7B;AAAA,EACA,OAAO,YAAY;AACjB,WAAO;AAAA,EACT;AAAA,EACA,YAAY,KAAK;AACf,UAAM,GAAG;AACT,SAAK,SAAS;AAAA,EAChB;AAAA,EACA,aAAa;AACX,WAAO;AAAA,MACL,GAAG,MAAM,WAAW;AAAA,MACpB,MAAM;AAAA,IACR;AAAA,EACF;AAAA,EACA,UAAU,QAAQ;AAChB,UAAM,MAAM,SAAS,cAAc,MAAM;AACzC,UAAM,YAAY,OAAO,MAAM;AAC/B,QAAI,OAAO,cAAc,UAAU;AACjC,UAAI,YAAY;AAAA,IAClB;AACA,WAAO;AAAA,EACT;AAAA,EACA,UAAU,UAAU,KAAK;AACvB,WAAO;AAAA,EACT;AAAA,EACA,eAAe,WAAW,mBAAmB,MAAM;AACjD,UAAM,SAAS,KAAK,iBAAiB;AACrC,WAAO,OAAO,eAAe,WAAW,gBAAgB;AAAA,EAC1D;AAAA,EACA,kBAAkB;AAChB,WAAO;AAAA,EACT;AAAA,EACA,OAAO,YAAY;AACjB,WAAO,UAAQ;AACb,UAAI,CAAC,gBAAgB,IAAI,GAAG;AAC1B,cAAM,MAAM,4BAA4B;AAAA,MAC1C;AACA,UAAI,KAAK,QAAQ,GAAG;AAClB,aAAK,OAAO;AAAA,MACd;AAAA,IACF;AAAA,EACF;AACF;AACA,SAAS,sBAAsB;AAC7B,SAAO,sBAAsB,IAAI,aAAa,CAAC;AACjD;AACA,SAAS,gBAAgB,MAAM;AAC7B,SAAO,gBAAgB;AACzB;",
  "names": []
}
