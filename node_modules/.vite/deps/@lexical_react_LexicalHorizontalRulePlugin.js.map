{
  "version": 3,
  "sources": ["../../@lexical/react/LexicalHorizontalRulePlugin.dev.mjs"],
  "sourcesContent": ["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { INSERT_HORIZONTAL_RULE_COMMAND, $createHorizontalRuleNode } from '@lexical/react/LexicalHorizontalRuleNode';\nimport { $insertNodeToNearestRoot } from '@lexical/utils';\nimport { $getSelection, $isRangeSelection, COMMAND_PRIORITY_EDITOR } from 'lexical';\nimport { useEffect } from 'react';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction HorizontalRulePlugin() {\n  const [editor] = useLexicalComposerContext();\n  useEffect(() => {\n    return editor.registerCommand(INSERT_HORIZONTAL_RULE_COMMAND, type => {\n      const selection = $getSelection();\n      if (!$isRangeSelection(selection)) {\n        return false;\n      }\n      const focusNode = selection.focus.getNode();\n      if (focusNode !== null) {\n        const horizontalRuleNode = $createHorizontalRuleNode();\n        $insertNodeToNearestRoot(horizontalRuleNode);\n      }\n      return true;\n    }, COMMAND_PRIORITY_EDITOR);\n  }, [editor]);\n  return null;\n}\n\nexport { HorizontalRulePlugin };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAYA,mBAA0B;AAU1B,SAAS,uBAAuB;AAC9B,QAAM,CAAC,MAAM,IAAI,0BAA0B;AAC3C,8BAAU,MAAM;AACd,WAAO,OAAO,gBAAgB,gCAAgC,UAAQ;AACpE,YAAM,YAAY,cAAc;AAChC,UAAI,CAAC,kBAAkB,SAAS,GAAG;AACjC,eAAO;AAAA,MACT;AACA,YAAM,YAAY,UAAU,MAAM,QAAQ;AAC1C,UAAI,cAAc,MAAM;AACtB,cAAM,qBAAqB,0BAA0B;AACrD,iCAAyB,kBAAkB;AAAA,MAC7C;AACA,aAAO;AAAA,IACT,GAAG,uBAAuB;AAAA,EAC5B,GAAG,CAAC,MAAM,CAAC;AACX,SAAO;AACT;",
  "names": []
}
