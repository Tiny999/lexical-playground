{
  "version": 3,
  "sources": ["../../@lexical/react/LexicalMarkdownShortcutPlugin.dev.mjs"],
  "sourcesContent": ["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { TRANSFORMERS, registerMarkdownShortcuts } from '@lexical/markdown';\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { HorizontalRuleNode, $isHorizontalRuleNode, $createHorizontalRuleNode } from '@lexical/react/LexicalHorizontalRuleNode';\nimport { useEffect } from 'react';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst HR = {\n  dependencies: [HorizontalRuleNode],\n  export: node => {\n    return $isHorizontalRuleNode(node) ? '***' : null;\n  },\n  regExp: /^(---|\\*\\*\\*|___)\\s?$/,\n  replace: (parentNode, _1, _2, isImport) => {\n    const line = $createHorizontalRuleNode();\n\n    // TODO: Get rid of isImport flag\n    if (isImport || parentNode.getNextSibling() != null) {\n      parentNode.replace(line);\n    } else {\n      parentNode.insertBefore(line);\n    }\n    line.selectNext();\n  },\n  type: 'element'\n};\nconst DEFAULT_TRANSFORMERS = [HR, ...TRANSFORMERS];\nfunction MarkdownShortcutPlugin({\n  transformers = DEFAULT_TRANSFORMERS\n}) {\n  const [editor] = useLexicalComposerContext();\n  useEffect(() => {\n    return registerMarkdownShortcuts(editor, transformers);\n  }, [editor, transformers]);\n  return null;\n}\n\nexport { DEFAULT_TRANSFORMERS, MarkdownShortcutPlugin };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA,mBAA0B;AAU1B,IAAM,KAAK;AAAA,EACT,cAAc,CAAC,kBAAkB;AAAA,EACjC,QAAQ,UAAQ;AACd,WAAO,sBAAsB,IAAI,IAAI,QAAQ;AAAA,EAC/C;AAAA,EACA,QAAQ;AAAA,EACR,SAAS,CAAC,YAAY,IAAI,IAAI,aAAa;AACzC,UAAM,OAAO,0BAA0B;AAGvC,QAAI,YAAY,WAAW,eAAe,KAAK,MAAM;AACnD,iBAAW,QAAQ,IAAI;AAAA,IACzB,OAAO;AACL,iBAAW,aAAa,IAAI;AAAA,IAC9B;AACA,SAAK,WAAW;AAAA,EAClB;AAAA,EACA,MAAM;AACR;AACA,IAAM,uBAAuB,CAAC,IAAI,GAAG,YAAY;AACjD,SAAS,uBAAuB;AAAA,EAC9B,eAAe;AACjB,GAAG;AACD,QAAM,CAAC,MAAM,IAAI,0BAA0B;AAC3C,8BAAU,MAAM;AACd,WAAO,0BAA0B,QAAQ,YAAY;AAAA,EACvD,GAAG,CAAC,QAAQ,YAAY,CAAC;AACzB,SAAO;AACT;",
  "names": []
}
