{
  "version": 3,
  "sources": ["../../@lexical/react/LexicalCheckListPlugin.dev.mjs"],
  "sourcesContent": ["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { INSERT_CHECK_LIST_COMMAND, insertList, $isListItemNode, $isListNode } from '@lexical/list';\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { mergeRegister, $findMatchingParent, isHTMLElement, calculateZoomLevel } from '@lexical/utils';\nimport { COMMAND_PRIORITY_LOW, KEY_ARROW_DOWN_COMMAND, KEY_ARROW_UP_COMMAND, KEY_ESCAPE_COMMAND, KEY_SPACE_COMMAND, $getNearestNodeFromDOMNode, KEY_ARROW_LEFT_COMMAND, $getSelection, $isRangeSelection, $isElementNode, getNearestEditorFromDOMNode } from 'lexical';\nimport { useEffect } from 'react';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction CheckListPlugin() {\n  const [editor] = useLexicalComposerContext();\n  useEffect(() => {\n    return mergeRegister(editor.registerCommand(INSERT_CHECK_LIST_COMMAND, () => {\n      insertList(editor, 'check');\n      return true;\n    }, COMMAND_PRIORITY_LOW), editor.registerCommand(KEY_ARROW_DOWN_COMMAND, event => {\n      return handleArrownUpOrDown(event, editor, false);\n    }, COMMAND_PRIORITY_LOW), editor.registerCommand(KEY_ARROW_UP_COMMAND, event => {\n      return handleArrownUpOrDown(event, editor, true);\n    }, COMMAND_PRIORITY_LOW), editor.registerCommand(KEY_ESCAPE_COMMAND, event => {\n      const activeItem = getActiveCheckListItem();\n      if (activeItem != null) {\n        const rootElement = editor.getRootElement();\n        if (rootElement != null) {\n          rootElement.focus();\n        }\n        return true;\n      }\n      return false;\n    }, COMMAND_PRIORITY_LOW), editor.registerCommand(KEY_SPACE_COMMAND, event => {\n      const activeItem = getActiveCheckListItem();\n      if (activeItem != null && editor.isEditable()) {\n        editor.update(() => {\n          const listItemNode = $getNearestNodeFromDOMNode(activeItem);\n          if ($isListItemNode(listItemNode)) {\n            event.preventDefault();\n            listItemNode.toggleChecked();\n          }\n        });\n        return true;\n      }\n      return false;\n    }, COMMAND_PRIORITY_LOW), editor.registerCommand(KEY_ARROW_LEFT_COMMAND, event => {\n      return editor.getEditorState().read(() => {\n        const selection = $getSelection();\n        if ($isRangeSelection(selection) && selection.isCollapsed()) {\n          const {\n            anchor\n          } = selection;\n          const isElement = anchor.type === 'element';\n          if (isElement || anchor.offset === 0) {\n            const anchorNode = anchor.getNode();\n            const elementNode = $findMatchingParent(anchorNode, node => $isElementNode(node) && !node.isInline());\n            if ($isListItemNode(elementNode)) {\n              const parent = elementNode.getParent();\n              if ($isListNode(parent) && parent.getListType() === 'check' && (isElement || elementNode.getFirstDescendant() === anchorNode)) {\n                const domNode = editor.getElementByKey(elementNode.__key);\n                if (domNode != null && document.activeElement !== domNode) {\n                  domNode.focus();\n                  event.preventDefault();\n                  return true;\n                }\n              }\n            }\n          }\n        }\n        return false;\n      });\n    }, COMMAND_PRIORITY_LOW), editor.registerRootListener((rootElement, prevElement) => {\n      if (rootElement !== null) {\n        rootElement.addEventListener('click', handleClick);\n        rootElement.addEventListener('pointerdown', handlePointerDown);\n      }\n      if (prevElement !== null) {\n        prevElement.removeEventListener('click', handleClick);\n        prevElement.removeEventListener('pointerdown', handlePointerDown);\n      }\n    }));\n  });\n  return null;\n}\nfunction handleCheckItemEvent(event, callback) {\n  const target = event.target;\n  if (target === null || !isHTMLElement(target)) {\n    return;\n  }\n\n  // Ignore clicks on LI that have nested lists\n  const firstChild = target.firstChild;\n  if (firstChild != null && isHTMLElement(firstChild) && (firstChild.tagName === 'UL' || firstChild.tagName === 'OL')) {\n    return;\n  }\n  const parentNode = target.parentNode;\n\n  // @ts-ignore internal field\n  if (!parentNode || parentNode.__lexicalListType !== 'check') {\n    return;\n  }\n  const rect = target.getBoundingClientRect();\n  const pageX = event.pageX / calculateZoomLevel(target);\n  if (target.dir === 'rtl' ? pageX < rect.right && pageX > rect.right - 20 : pageX > rect.left && pageX < rect.left + 20) {\n    callback();\n  }\n}\nfunction handleClick(event) {\n  handleCheckItemEvent(event, () => {\n    if (event.target instanceof HTMLElement) {\n      const domNode = event.target;\n      const editor = getNearestEditorFromDOMNode(domNode);\n      if (editor != null && editor.isEditable()) {\n        editor.update(() => {\n          const node = $getNearestNodeFromDOMNode(domNode);\n          if ($isListItemNode(node)) {\n            domNode.focus();\n            node.toggleChecked();\n          }\n        });\n      }\n    }\n  });\n}\nfunction handlePointerDown(event) {\n  handleCheckItemEvent(event, () => {\n    // Prevents caret moving when clicking on check mark\n    event.preventDefault();\n  });\n}\nfunction getActiveCheckListItem() {\n  const activeElement = document.activeElement;\n  return activeElement != null && activeElement.tagName === 'LI' && activeElement.parentNode != null &&\n  // @ts-ignore internal field\n  activeElement.parentNode.__lexicalListType === 'check' ? activeElement : null;\n}\nfunction findCheckListItemSibling(node, backward) {\n  let sibling = backward ? node.getPreviousSibling() : node.getNextSibling();\n  let parent = node;\n\n  // Going up in a tree to get non-null sibling\n  while (sibling == null && $isListItemNode(parent)) {\n    // Get li -> parent ul/ol -> parent li\n    parent = parent.getParentOrThrow().getParent();\n    if (parent != null) {\n      sibling = backward ? parent.getPreviousSibling() : parent.getNextSibling();\n    }\n  }\n\n  // Going down in a tree to get first non-nested list item\n  while ($isListItemNode(sibling)) {\n    const firstChild = backward ? sibling.getLastChild() : sibling.getFirstChild();\n    if (!$isListNode(firstChild)) {\n      return sibling;\n    }\n    sibling = backward ? firstChild.getLastChild() : firstChild.getFirstChild();\n  }\n  return null;\n}\nfunction handleArrownUpOrDown(event, editor, backward) {\n  const activeItem = getActiveCheckListItem();\n  if (activeItem != null) {\n    editor.update(() => {\n      const listItem = $getNearestNodeFromDOMNode(activeItem);\n      if (!$isListItemNode(listItem)) {\n        return;\n      }\n      const nextListItem = findCheckListItemSibling(listItem, backward);\n      if (nextListItem != null) {\n        nextListItem.selectStart();\n        const dom = editor.getElementByKey(nextListItem.__key);\n        if (dom != null) {\n          event.preventDefault();\n          setTimeout(() => {\n            dom.focus();\n          }, 0);\n        }\n      }\n    });\n  }\n  return false;\n}\n\nexport { CheckListPlugin };\n"],
  "mappings": "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",
  "names": []
}
